#!/usr/bin/wish8.6 -f

source [lindex $argv 0]/util.tk
source [lindex $argv 0]/auth16.tk
source [lindex $argv 0]/auth20.tk
source [lindex $argv 0]/auth25.tk
source [lindex $argv 0]/otp16.tk
source [lindex $argv 0]/ekyc20.tk
source [lindex $argv 0]/ekyc21.tk
source [lindex $argv 0]/ekyc25.tk
source [lindex $argv 0]/response.tk

#/* 
# @Name: main.tk
# @Description: This file is to build the menu bar with anylevel of
#              submenu. The convention for menu creation is as follows
# 1) "." - represents the top level of menu 
# 2) "+" - represents that this is a parent for submenu
# 3) neither "." nor "+" represents the command for menu item
# 4) command arguments for menu item
#
# @Author: Mohad Naushad Ahmed
# @Email:  NAUSHAD.DLN@GMAIL.COM
# @Dated:  15-May-2018
#*/

set menu_b {
  #/*Root     Menu Name      Parent/Leaf(proc) Argument for Leafnode*/
  #/*----------------------------------------------------------------*/
  {"."                 "File"                  "+"    {}}
  {"File"              "Exit"                  "Exit" {}}
  {"."                 "Uidai"                 "+"    {}}
  {"Uidai"             "Staging"               "+"    {}}
  {"Staging"           "Authentication"        "+"    {}}
  {"Authentication"    "Version1.6"            "{staging_auth 1.6}" {}}
  {"Authentication"    "Version2.0"            "{staging_auth 2.0}" {}}
  {"Authentication"    "Version2.5"            "{staging_auth 2.5}" {}}
  {"Staging"           "Otp"                   "+"    {}}
  {"Otp"               "Version1.6"            "{staging_otp 1.6}"  {}}
  {"Otp"               "Version2.5"            "{staging_otp 2.5}"  {}}
  {"Staging"           "eKyc"                  "+"    {}}
  {"eKyc"              "eKyc2dot0"             "+"    {}}
  {"eKyc2dot0"         "Authentication1.6"     "{staging_ekyc 2.0 1.6}"  {}}
  {"eKyc2dot0"         "Authentication2.0"     "{staging_ekyc 2.0 2.0}"  {}}
  {"eKyc2dot0"         "Authentication2.5"     "{staging_ekyc 2.0 2.5}"  {}}
  {"eKyc"              "eKyc2dot1"             "+"    {}}
  {"eKyc2dot1"         "Authentication1.6"     "{staging_ekyc 2.1 1.6}"  {}}
  {"eKyc2dot1"         "Authentication2.0"     "{staging_ekyc 2.1 2.0}"  {}}
  {"eKyc2dot1"         "Authentication2.5"     "{staging_ekyc 2.1 2.5}"  {}}
  {"eKyc"              "eKyc2dot5"             "+"    {}}
  {"eKyc2dot5"         "Authentication1.6"     "{staging_ekyc 2.5 1.6}"  {}}
  {"eKyc2dot5"         "Authentication2.0"     "{staging_ekyc 2.5 2.0}"  {}}
  {"eKyc2dot5"         "Authentication2.5"     "{staging_ekyc 2.5 2.5}"  {}}
  {"Uidai"             "Pre-Production"        "+"      {}}
  {"Pre-Production"    "Authentication"        "+"      {}}
  {"Authentication"    "Version1.6"            "dummy"  {}}
  {"Authentication"    "Version2.0"            "dummy"  {}}
  {"Authentication"    "Version2.5"            "dummy"  {}}
  {"Pre-Production"    "Otp"                   "+"      {}}
  {"Otp"               "Version1.6"            "dummy"  {}}
  {"Otp"               "Version2.5"            "dummy"  {}}
  {"Pre-Production"    "eKyc"                  "+"      {}}
  {"eKyc"              "Version1.6"            "dummy"  {}}
  {"eKyc"              "Version2.5"            "dummy"  {}}
  {"Uidai"             "Production"            "+"      {}}
  {"Production"        "Authentication"        "+"      {}}
  {"Authentication"    "Version1.6"            "dummy"  {}}
  {"Authentication"    "Version2.0"            "dummy"  {}}
  {"Production"        "Otp"                   "+"      {}}
  {"Otp"               "Version1.6"            "dummy"  {}}
  {"Otp"               "Version2.5"            "dummy"  {}}
  {"Production"        "eKyc"                  "+"      {}}
  {"eKyc"              "Version1.6"            "dummy"  {}}
  {"eKyc"              "Version2.5"            "dummy"  {}}

};#/*Menu bar*/

proc dummy {} {
 after 3000 {destroy .dummy}
 tk_dialog .dummy "Balaagh Technologies" "Under development!" info 0 OK
};#/*dummy*/

proc Exit {} {
  puts "Exit"
};#/**/
 
proc staging_ekyc {ekyc_version auth_version} {

  set container [init_frame container eKYC]
  staging_auth_form $container $auth_version 
  staging_uses_form $container $auth_version
  staging_tkn_form  $container $auth_version
  staging_meta_form $container $auth_version
  staging_pi_form   $container $auth_version
  staging_pa_form   $container $auth_version
  staging_pfa_form  $container $auth_version
  staging_bio_form  $container $auth_version
  staging_pv_form   $container $auth_version
  staging_demo_form $container $auth_version
  staging_kyc_form  $container $ekyc_version 
  staging_uidai_form $container $auth_version 3 2 auth 
  crypto_form $container ekyc $ekyc_version
  btn_widget $container kyc $ekyc_version $auth_version

};#/*staging_ekyc*/
 
proc staging_otp {version} {

  set container [init_frame container OTP]
  staging_otp_form $container $version 
  staging_opts_form $container $version
  staging_uidai_form $container $version 1 0 otp
  crypto_form $container otp $version
  btn_widget $container otp $version $version

};#/*staging_otp*/

proc staging_auth {version} {

  set container [init_frame container Authentication]
  staging_auth_form $container $version 
  staging_uses_form $container $version
  staging_tkn_form  $container $version
  staging_meta_form $container $version
  staging_pi_form   $container $version
  staging_pa_form   $container $version
  staging_pfa_form  $container $version
  staging_bio_form  $container $version
  staging_pv_form   $container $version
  staging_demo_form $container $version
  staging_uidai_form $container $version 3 1 auth 
  crypto_form $container auth $version
  btn_widget $container auth $version $version

};#/*staging_auth*/

proc staging_pi_form {f_name version} {

  if {"1.6" == $version} {
    set lbl_frm [labelframe $f_name.staging_pi -text "Pi (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 1 -column 1
    authV16::pi_attr $lbl_frm
  } elseif {"2.0" == $version} {
    set lbl_frm [labelframe $f_name.staging_pi -text "Pi (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 1 -column 0
    authV20::pi_attr $lbl_frm
  } elseif {"2.5" == $version} {
    set lbl_frm [labelframe $f_name.staging_pi -text "Pi (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 1 -column 0
    authV25::pi_attr $lbl_frm
  } else {
    puts stderr "Invalid version $version"
  }
};#/*staging_pi_form*/

proc staging_pa_form {f_name version} {


  if {"1.6" == $version} {
    set lbl_frm [labelframe $f_name.staging_pa -text "Pa (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 1 -column 2
    authV16::pa_attr $lbl_frm
  } elseif {"2.0" == $version} {
    set lbl_frm [labelframe $f_name.staging_pa -text "Pa (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 1 -column 1
    authV20::pa_attr $lbl_frm
  } elseif {"2.5" == $version} {
    set lbl_frm [labelframe $f_name.staging_pa -text "Pa (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 1 -column 1
    authV25::pa_attr $lbl_frm
  } else {
    puts stderr "Invalid version $version"
  }

};#/*staging_pa_form*/

proc staging_pfa_form {f_name version} {


  if {"1.6" == $version} {
    set lbl_frm [labelframe $f_name.staging_pfa -text "Pfa (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 2 -column 0
    authV16::pfa_attr $lbl_frm
  } elseif {"2.0" == $version} {
    set lbl_frm [labelframe $f_name.staging_pfa -text "Pfa (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 1 -column 2
    authV20::pfa_attr $lbl_frm
  } elseif {"2.5" == $version} {
    set lbl_frm [labelframe $f_name.staging_pfa -text "Pfa (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 1 -column 2
    authV25::pfa_attr $lbl_frm
  } else {
    puts stderr "Invalid version $version"
  }
};#/*staging_pfa_form*/

proc staging_bio_form {f_name version} {


  if {"1.6" == $version} {
    set lbl_frm [labelframe $f_name.staging_bio -text "Bio (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 2 -column 1
    authV16::bio_attr $lbl_frm
  } elseif {"2.0" == $version} {
    set lbl_frm [labelframe $f_name.staging_bio -text "Bio (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 2 -column 0
    authV20::bio_attr $lbl_frm
  } elseif {"2.5" == $version} {
    set lbl_frm [labelframe $f_name.staging_bio -text "Bio (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 2 -column 0
    authV25::bio_attr $lbl_frm
  } else {
    puts stderr "Invalid version $version"
  }
};#/*staging_bio_form*/

proc staging_pv_form {f_name version} {


  if {"1.6" == $version} {
    set lbl_frm [labelframe $f_name.staging_pv -text "Pv (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 2 -column 2
    authV16::pv_attr $lbl_frm
  } elseif {"2.0" == $version} {
    set lbl_frm [labelframe $f_name.staging_pv -text "Pv (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 2 -column 1
    authV20::pv_attr $lbl_frm
  } elseif {"2.5" == $version} {
    set lbl_frm [labelframe $f_name.staging_pv -text "Pv (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 2 -column 1
    authV25::pv_attr $lbl_frm
  } else {
    puts stderr "Invalid version $version"
  }
};#/*staging_pv_form*/

proc staging_demo_form {f_name version} {


  if {"1.6" == $version} {
    set lbl_frm [labelframe $f_name.staging_demo -text "Demo (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 3 -column 0
    authV16::demo_attr $lbl_frm
  } elseif {"2.0" == $version} {
    set lbl_frm [labelframe $f_name.staging_demo -text "Demo (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 2 -column 2
    authV20::demo_attr $lbl_frm
  } elseif {"2.5" == $version} {
    set lbl_frm [labelframe $f_name.staging_demo -text "Demo (Attributes)"]
    grid $lbl_frm -sticky news -pady 2 -padx 1 -row 2 -column 2
    authV25::demo_attr $lbl_frm
  } else {
    puts stderr "Invalid version $version"
  }
};#/*staging_demo_form*/

proc staging_uidai_form {f_name version row col type} {


  if {"auth" == $type} {

    if {$version == "1.6"} {
      set lbl_frm [labelframe $f_name.staging_uidai -text "Uidai Host (Attributes)"]
      grid $lbl_frm -sticky news -pady 2 -padx 1 -row $row -column $col
      authV16::uidai_auth_server $lbl_frm
    } elseif {"2.0" == $version} {
      set lbl_frm [labelframe $f_name.staging_uidai -text "Uidai Host (Attributes)"]
      grid $lbl_frm -sticky news -pady 2 -padx 1 -row 3 -column 0
      authV20::uidai_auth_server $lbl_frm
    } elseif {"2.5" == $version} {
      set lbl_frm [labelframe $f_name.staging_uidai -text "Uidai Host (Attributes)"]
      grid $lbl_frm -sticky news -pady 2 -padx 1 -row 3 -column 0
      authV25::uidai_auth_server $lbl_frm
    }

  } elseif {"otp" == $type} {

    if {"1.6" == $version} {
      otpV16::uidai_otp_server $lbl_frm 
    } elseif {"2.0" == $version} {
      otpV20::uidai_otp_server $lbl_frm 
    } elseif {"2.5" == $version} {
      otpV25::uidai_otp_server $lbl_frm 
    }

  }

};#/*staging_uidai_form*/

proc crypto_form {f_name type version} {

  if {"auth" == $type} {

    if {"1.6" == $version} {
      authV16::crypto_attr $f_name
    } elseif {"2.0" == $version} {
      authV20::crypto_attr $f_name
    } elseif {"2.5" == $version} {
      authV25::crypto_attr $f_name
    }

  } elseif {"ekyc" == $type} {

    if {"2.0" == $version} {
      ekycV20::crypto_attr $f_name
    } elseif {"2.1" == $version} {
      ekycV21::crypto_attr $f_name
    } elseif {"2.5" == $version} {
      ekycV25::crypto_attr $f_name
    }

  } elseif {"otp" == $type} {

    if {"1.6" == $version} {
      otpV16::crypto_attr $f_name
    } elseif {"2.0" == $version} {
      otpV20::crypto_attr $f_name
    } elseif {"2.5" == $version} {
      otpV25::crypto_attr $f_name
    }

  } else {
    puts stderr "Invalid type"
  }

};#/*crypto_form*/

proc staging_otp_form {f_name version} {
  set lbl_frm [labelframe $f_name.staging_otp -text "Otp* (Attributes)"]
  grid $lbl_frm -sticky news -row 0 -column 0 -pady 2 -padx 1

  if {$version == "1.6"} {
    otpV16::otp_attr $lbl_frm

  } elseif {$version == "2.0"} {

  } elseif {$version == "2.5"} {

  }
 
};#/*staging_otp_form*/

proc staging_opts_form {f_name version} {
  set lbl_frm [labelframe $f_name.staging_opts -text "Opts* (Attributes)"]
  grid $lbl_frm -sticky news -row 0 -column 1 -row 0 -pady 2 -padx 1

  if {$version == "1.6"} {
    otpV16::opts_attr $lbl_frm
  }

};#/*staging_opts_form*/

proc staging_kyc_form {f_name version} {
  set lbl_frm [labelframe $f_name.staging_kyc -text "eKYC* (Attributes)"]
  grid $lbl_frm -sticky news -row 3 -column 1 -pady 2 -padx 1

  if {$version == "2.0"} {
    ekycV20::kyc_attr $lbl_frm

  } elseif {$version == "2.1"} {
    ekycV21::kyc_attr $lbl_frm

  } elseif {$version == "2.5"} {
    ekycV25::kyc_attr $lbl_frm

  }
 
};#/*staging_kyc_form*/


proc staging_auth_form {f_name version} {
  set lbl_frm [labelframe $f_name.staging_auth -text "Auth* (Attributes)"]
  grid $lbl_frm -sticky news -row 0 -column 0 -pady 2 -padx 1

  if {$version == "1.6"} {
    authV16::auth_attr $lbl_frm

  } elseif {$version == "2.0"} {
    authV20::auth_attr $lbl_frm

  } elseif {$version == "2.5"} {
    authV25::auth_attr $lbl_frm

  }
 
};#/*staging_auth_form*/

proc staging_uses_form {f_name version} {
  set lbl_frm [labelframe $f_name.staging_uses -text "Uses* (Attributes)"]
  grid $lbl_frm -sticky news -row 0 -column 1 -pady 2 -padx 1

  if {"1.6" == $version} {
    authV16::uses_attr $lbl_frm
  } elseif {"2.0" == $version} {
    authV20::uses_attr $lbl_frm
  } elseif {"2.5" == $version} {
    authV25::uses_attr $lbl_frm
  } else {
    puts stderr "Invalid version $version"
  }

};#/*staging_uses_form*/

proc staging_tkn_form {f_name version} {

  if {"1.6" == $version} {
    set lbl_frm [labelframe $f_name.staging_tkn -text "Tkn (Attributes)"]
    grid $lbl_frm -sticky news -row 0 -column 2 -pady 2 -padx 1
    authV16::tkn_attr $lbl_frm
  }
};#/*staging_tkn_form*/

proc staging_meta_form {f_name version} {

  if {"1.6" == $version} {
    set lbl_frm [labelframe $f_name.staging_meta -text "Meta* (Attributes)"]
    grid $lbl_frm -sticky news -row 1 -column 0 -pady 2 -padx 1
    authV16::meta_attr $lbl_frm
  } elseif {"2.0" == $version} {
    set lbl_frm [labelframe $f_name.staging_meta -text "Meta* (Attributes)"]
    grid $lbl_frm -sticky news -row 0 -column 2 -pady 2 -padx 1
    authV20::meta_attr $lbl_frm
  } elseif {"2.5" == $version} {
    set lbl_frm [labelframe $f_name.staging_meta -text "Meta* (Attributes)"]
    grid $lbl_frm -sticky news -row 0 -column 2 -pady 2 -padx 1
    authV25::meta_attr $lbl_frm
  } else {
    puts stderr "Invalid version $version"
  }

};#/*staging_meta_form*/

proc default_contents {type version version_ex} {

  if {"auth" == $type} {

    if {"1.6" == $version} {
     authV16::set_default_auth
     authV16::set_default_uses
     authV16::uses_opt_enable "pic"
     authV16::set_default_meta

    } elseif {"2.0" == $version} { 
     authV20::set_default_auth
     authV20::set_default_uses
     authV20::uses_opt_enable "pic"
     authV20::set_default_meta
      
    } elseif {"2.5" == $version} {
     authV20::set_default_auth
     authV20::set_default_uses
     authV20::uses_opt_enable "pic"
     authV20::set_default_meta
      
    }

  } elseif {"otp" == $type} {

    if {"1.6" == $version} {
      otpV16::set_default_otp 
    }

  } elseif {"kyc" == $type} {

    if {"2.0" == $version} {

      ekycV20::set_default_kyc
    } elseif {"2.1" == $version} {

      ekycV21::set_default_kyc
    } elseif {"2.5" == $version} {

      ekycV25::set_default_kyc
    }

    if {"1.6" == $version_ex} {
      set ctx "authV16" 
    } elseif {"2.0" == $version_ex} {
      set ctx "authV20"
    } elseif {"2.5" == $version_ex} {
      set ctx "authV25"
    }

    [subst $ctx]::set_default_auth
    [subst $ctx]::set_default_uses
    [subst $ctx]::uses_opt_enable "pvc"
    [subst $ctx]::set_default_meta
  }

};#/*default_contents*/

proc clear_contents {type version version_ex} {

  if {"auth" == $type} {

    if {"1.6" == $version} {
      authV16::clear_auth
      authV16::clear_uses
      authV16::uses_opt_disable "pic"
      authV16::uses_opt_disable "pac"
      authV16::uses_opt_disable "pfac"
      authV16::uses_opt_disable "bioc"
      authV16::uses_opt_disable "pvc"
      authV16::uses_opt_disable "democ"
      authV16::clear_meta 

    } elseif {"2.0" == $version} { 
      authV20::clear_auth
      authV20::clear_uses
      authV20::uses_opt_disable "pic"
      authV20::uses_opt_disable "pac"
      authV20::uses_opt_disable "pfac"
      authV20::uses_opt_disable "bioc"
      authV20::uses_opt_disable "pvc"
      authV20::uses_opt_disable "democ"
      authV20::clear_meta 
      
    } elseif {"2.5" == $version} {
      authV25::clear_auth
      authV25::clear_uses
      authV25::uses_opt_disable "pic"
      authV25::uses_opt_disable "pac"
      authV25::uses_opt_disable "pfac"
      authV25::uses_opt_disable "bioc"
      authV25::uses_opt_disable "pvc"
      authV25::uses_opt_disable "democ"
      authV25::clear_meta 

    }

  } elseif {"otp" == $type} {
    
  } elseif {"kyc" == $type} {

    if {"1.6" == $version_ex} {
      set ctx "authV16" 
    } elseif {"2.0" == $version_ex} {
      set ctx "authV20"
    } elseif {"2.5" == $version_ex} {
      set ctx "authV25"
    }

    [subst $ctx]::clear_auth
    [subst $ctx]::clear_uses
    [subst $ctx]::uses_opt_disable "pic"
    [subst $ctx]::uses_opt_disable "pac"
    [subst $ctx]::uses_opt_disable "pfac"
    [subst $ctx]::uses_opt_disable "bioc"
    [subst $ctx]::uses_opt_disable "pvc"
    [subst $ctx]::uses_opt_disable "democ"
    [subst $ctx]::clear_meta
  }

};#/*clear_contents*/

proc submit_contents {type version version_ex} {
  set REQ ""

  if {"auth" == $type} {

    if {"1.6" == $version} {
      set REQ [authV16::build_auth_request auth]

    } elseif {"2.0" == $version} { 
      set REQ [authV20::build_auth_request auth]
      
    } elseif {"2.5" == $version} {
      set REQ [authV25::build_auth_request auth]
      
    }
  } elseif {"otp" == $type} {
    if {"1.6" == $version} {
      set REQ [otpV16::build_otp_request]

    }

  } elseif {"kyc" == $type} {

    if {"2.0" == $version} {
      set REQ [ekycV20::build_kyc_request $version_ex]

    } elseif {"2.1" == $version} {
      set REQ [ekycV21::build_kyc_request $version_ex]
      
    } elseif {"2.5" == $version} {
      set REQ [ekycV25::build_kyc_request $version_ex]
      
    }
  }

  puts $REQ
};#submit_contents

proc btn_widget {f_name type version version_ex} {

  set frm [frame $f_name.btn_frame]
  set lbl_frm [labelframe $frm.lbl_frame -text "Command"]

  #set frm [frame .child_win.btn_frame]
  #set lbl_frm [labelframe $frm.lbl_frame -text "Command"]

  button $lbl_frm.clear -text "Clear Contents" -command "clear_contents $type $version $version_ex"
  button $lbl_frm.default -text "Set Default Value" -command "default_contents $type $version $version_ex"
  button $lbl_frm.submit -text "Submit Request" -command "submit_contents $type $version $version_ex"
  grid $lbl_frm.clear $lbl_frm.default $lbl_frm.submit -row 4 -pady 5 -padx 5
  grid $lbl_frm 
  grid $frm -sticky w -pady 8 -padx 9
    
};#/*btn_widget*/


# /**
# @brief This function creates the canvas with vertical and horizontal 
# scrollbars and attached themselves to frame.
#
# @pram f_name
# @return none
# @author NAUSHAD.DLN@GMAIL.COM
# */
proc init_frame {f_name title} {

  if {1 == [winfo exists .child_win]} {
    destroy .child_win
  }

  toplevel .child_win
  wm title .child_win $title 
  wm geometry .child_win 900x400+100+100
  canvas .child_win.canvas -xscrollcommand ".child_win.xscroll set" \
         -yscrollcommand ".child_win.yscroll set" -width 500 -height 600 \
         -bd 4
  scrollbar .child_win.xscroll -orient horizontal -command ".child_win.canvas xview"
  scrollbar .child_win.yscroll -orient vertical -command ".child_win.canvas yview"

  set container [frame .child_win.canvas.$f_name -relief raised -padx 5 -pady 5]

  .child_win.canvas create window 0 0 -anchor nw -window $container

  grid .child_win.canvas - .child_win.yscroll -sticky news -pady 4 -padx 2
  grid .child_win.xscroll - x -sticky news
  grid rowconfigure .child_win 0 -weight 1
  grid columnconfigure .child_win 0 -weight 1

  bind $container <Configure> {
    .child_win.canvas configure -scrollregion [.child_win.canvas bbox all]
  }

  return $container
};#/*init_frame*/

# /**
# @brief
# @pram
# @return
# @author
# */
proc get_parent_path path {

  set len [llength $path]
  set tmp_path {}

  for {set idx 1} {$idx < $len} {incr idx} {
    set tmp_var [string tolower [lindex $path [expr {$len - $idx}]]]
    set tmp_path [concat $tmp_path.$tmp_var]
  }

  return $tmp_path
};#/*get_parent_path*/

#  @brief:
#  @pram:
#  @return:
#  
proc build_widget_path path {

  set len [llength $path]
  set tmp_path {}

  for {set idx 0} {$idx < $len} {incr idx} {
    set tmp_var [string tolower [lindex $path [expr {$len - $idx - 1}]]]
    set tmp_path [concat $tmp_path.$tmp_var]
  }

  return $tmp_path
};#/*build_widget_path*/

#  @brief:
#  @pram:
#  @return:
#  
proc get_offset {root parent} {

 set idx 0
  foreach  p_elem $parent {
    if {$root != [lindex $parent $idx]} {
      set idx [expr $idx + 1]
    } else {
      break
    }
  }

  return $idx
};#/*get_offset*/

#  @brief:
#  @pram:
#  @return:
#  
proc del_elem {offset parent} {

  for {set idx 0} {$idx < $offset} {incr idx} {
    set parent [lreplace $parent 0 0]
  }

  return $parent
};#/*del_elem*/

#  @brief:
#  @pram:
#  @return:
#  
proc build_menu {menu_b menu_bar} {

  set parent [list] 

  foreach elem $menu_b {
    set root [lindex $elem 0]
    set lbl [lindex $elem 1]
    set cmd [lindex $elem 2]
    set arg [lindex $elem 3]

    if {$cmd == "+"} {
      #submenu 
      if {"." == $root} {
        #Delete the parent list
        set parent [list]
        set sep 1
      } else {
        set sep 0
      }
      #/*pop up the parent*/ 
      if {$root != [lindex $parent 0]} {
        set offset [get_offset $root $parent]
        set parent [del_elem $offset $parent]
      }
      #/*push into parent*/
      set parent [linsert $parent 0 $lbl]
      set path [build_widget_path $parent]

      if {[llength $parent] > 1} {
        set parent_path [get_parent_path $parent]
        eval $menu_bar$parent_path add cascade -menu [menu $menu_bar$path -tearoff $sep] -label $lbl
        eval $menu_bar$parent_path add separator
      } else {
        eval $menu_bar add cascade -menu [menu $menu_bar$path -tearoff $sep] -label $lbl
        eval $menu_bar add separator
      }
    } elseif {$root == "."} {
      #root element of menubar
      eval $menu_bar add command -command $cmd -label $lbl

    } elseif {[lindex $parent 0] == $root} {
      #sub-menu
      set path [build_widget_path $parent]
      eval $menu_bar$path add command -command $cmd -label $lbl

    } elseif {[llength $parent] > 0} {
      #/*pop up the parent*/ 
      set offset [get_offset $root $parent] 
      set parent [del_elem $offset $parent]
      set path [build_widget_path $parent]
      eval $menu_bar$path add command -command $cmd -label $lbl
    }
  }
};#/*build_menu*/

proc main_window {t} {
  global menu_b
  wm title . $t
  menu .menubar
  . configure -menu .menubar -height 500 -width 1200
  build_menu $menu_b .menubar

};#/*main_window*/


main_window "Balaagh Technologies"


