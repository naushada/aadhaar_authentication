package require BWidget

#/* 
# @name ekyc20.tk
# @brief This file is to build the user form entry
#        through which respective values can be supplied by end user
#        This user form complies with specification version 1.6
#
# @author Mohad Naushad Ahmed
# @email  NAUSHAD.DLN@GMAIL.COM
# @dated  27-May-2018
#*/


set widgets_name_v16(kyc) "" 

proc kyc_attr_v20 {frm} {

  set arg { {ver vere entry {}} {ra rae combobox {O F I P}} {rc rce combobox {Y N}} 
            {mec mece combobox {N Y}} {lr lre combobox {N Y}} {de dee combobox {N Y}} 
            {pfr pfre combobox {Y N}} {uri urie combobox {"/kyc/2.0" "/ekyc2.5" "/kyc/1.0"}} }

  build_form $frm kyc $arg
};#/*kyc_attr_v20*/

proc set_default_kyc_v20 {} {
  global widgets_name_v16 
  set default {"2.0"}
  set idx 0
  foreach val $widgets_name_v16(kyc) {
    if {"Entry" == [winfo class $val]} {
      $val delete 0 end
      $val insert 0 [lindex $default $idx]
    }
    incr idx  
  } 
};#/*set_default_kyc_v20*/

proc build_kyc_request_v20 {} {

  set arg {uid tid txn ac sa ver lk}
  set auth [get_value auth $arg]
  set arg {pi pa pfa bio pv demo}
  set uses [get_value uses $arg]
  set arg {type value}
  set tkn  [get_value tkn  $arg]
  set arg {udc fdc idc pip lot lov}
  set meta [get_value meta $arg]
  #eKYC attributes
  set arg {ver ra rc mec lr de pfr uri}
  set ekyc [get_value kyc $arg]

  #/*Prepare the request*/
  set REQ "stage=staging&request=ekyc&$auth&$uses&$tkn&$meta&$ekyc"

  set checkbutton_var {pic pac pfac bioc pvc democ}
  foreach val $checkbutton_var {
    global $val
    if {$val == "pic" && [subst $$val] == 1} {
      #/*Pi is selected*/
      set arg {ms mv name lname lmv gender dob dobt age phone email}
      set pi [get_value pi $arg] 
      set REQ "$REQ&$pi"

    } elseif {$val == "pac" && [subst $$val] == 1} {
      #/*Pa is selected*/
      set arg {ms co house street lm loc vtc subdist dist state pc po}
      set pa [get_value pa $arg] 
      set REQ "$REQ&$pa"
    
    } elseif {$val == "pfac" && [subst $$val] == 1} {
      #/*pfa is selected*/
      set arg {ms mv av lav lmv}
      set pfa [get_value pfa $arg] 
      set REQ "$REQ&$pfa"

    } elseif {$val == "bioc" && [subst $$val] == 1} {
      #/*bio is selected*/
      set arg {type posh}
      set bio [get_value bio $arg] 
      set REQ "$REQ&$bio"

    } elseif {$val == "pvc" && [subst $$val] == 1} {
      #/*Pv is selected*/
      set arg {pin otp}
      set pv [get_value pv $arg] 
      set REQ "$REQ&$pv"

    } elseif {$val == "democ" && [subst $$val] == 1} {
      #/*demo is selected*/
      set arg {lang}
      set demo [get_value demo $arg] 
      set REQ "$REQ&$demo"
    }
  }

  set arg {uri host}
  set uidai [get_value uidai $arg] 
  set REQ "$REQ&$uidai"
  #/*Extracting the crypto contents*/
  set arg {public private password}
  set crypto [get_value crypto $arg] 
  set REQ "$REQ&$crypto"

  puts "/request?$REQ"
};#/*build_kyc_request_v20*/
