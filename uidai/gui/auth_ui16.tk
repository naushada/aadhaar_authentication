package require BWidget

#/* 
# @name ui16.tk
# @brief This file is to build the user form entry
#        through which respective values can be supplied by end user
#        This user form complies with specification version 1.6
#
# @author Mohad Naushad Ahmed
# @email  NAUSHAD.DLN@GMAIL.COM
# @dated  15-May-2018
#*/


set widgets_name_v16(auth) "" 
set widgets_name_v16(uses) "" 
set widgets_name_v16(tkn) "" 
set widgets_name_v16(meta) "" 
set widgets_name_v16(pi) "" 
set widgets_name_v16(pa) "" 
set widgets_name_v16(pfa) "" 
set widgets_name_v16(bio) "" 
set widgets_name_v16(pv) "" 
set widgets_name_v16(demo) "" 

proc auth_attr_v16 {frm} {

  set arg { {uid uide entry {}} {tid tide entry {}} {txn txne entry {}} 
            {ac ace entry {}} {sa sae entry {}} {ver vere entry {}} 
            {lk lke entry {}} }

  build_form $frm auth $arg
};#/*auth_attr_v16*/

proc uses_attr_v16 {frm} {

  set arg { {pi pic checkbutton {pic}} {pa pac checkbutton {pac}} {pfa pfac checkbutton {pfac}}
            {bio bioc checkbutton {bioc}} {pv pvc checkbutton {pvc}} {demo democ checkbutton {democ}} }

  build_form $frm uses $arg
};#/*uses_attr_v16*/

proc tkn_attr_v16 {frm} {

  set arg { {type typee combobox {NA "Mobile Number"}} {value valuee entry {}} }

  build_form $frm tkn $arg
};#/*tkn_attr_v16*/

proc meta_attr_v16 {frm} {

  set arg { {udc udce entry {}} {fdc fdce combobox {NA NC}} {idc idce entry {}} 
            {pip pipe entry {}} {lot lote combobox {P G}} {lov love entry {}} }

  build_form $frm meta $arg
};#/*meta_attr_v16*/

proc pi_attr_v16 {frm} {

  set arg { {ms mse combobox {E P}} {mv mve combobox {100 80 60 40 20 10}} {name namee entry {}} 
            {lname lnamee entry {}} {lmv lmve combobox {P G}} {gender gendere combobox {M F T}} 
            {dob dobe entry {}} {dobt dobte combobox {V D A}} {age agee entry {}} {phone phonee entry {}} 
            {email emaile entry {}}}

  build_form $frm pi $arg
};#/*pi_attr_v16*/

proc pa_attr_v16 {frm} {

  set arg { {ms mse combobox {E P}} {co coe entry {}} {house housee entry {}} 
            {street streete entry {}} {lm lme entry {}} {loc loce entry {}} 
            {vtc vtce entry {}} {subdist subdiste entry {}} {dist diste entry {}} {state statee entry {}} 
            {pc pce entry {}} {po poe entry {}} }

  build_form $frm pa $arg
};#/*pa_attr_v16*/

proc pfa_attr_v16 {frm} {

  set arg { {ms mse combobox {E P}} {mv mve entry {}} {av ave entry {}} 
            {lav lave entry {}} {lmv lmve entry {}} }

  build_form $frm pfa $arg
};#/*pfa_attr_v16*/

proc bio_attr_v16 {frm} {

  set arg { {type typee combobox {FMR FIR IIR}} {posh poshe combobox {UNKNOWN LEFT_IRIS 
            RIGHT_IRIS LEFT_INDEX LEFT_LITTLE LEFT_MIDDLE LEFT_RING 
            LEFT_THUMB RIGHT_INDEX RIGHT_LITTLE RIGHT_MIDDLE RIGHT_RING RIGHT_THUMB}}}

  build_form $frm bio $arg
};#/*bio_attr_v16*/

proc pv_attr_v16 {frm} {

  set arg { {pin pine entry {}} {otp otpe entry {}} }

  build_form $frm pv $arg
};#/*pv_attr_v16*/

proc demo_attr_v16 {frm} {

  set arg { {lang lange combobox {NA
                                  Assamese
                                  Bengali
                                  Gujarati
                                  Hindi
                                  Kannada
                                  Malayalam
                                  Manipuri
                                  Marathi
                                  Oriya
                                  Punjabi
                                  Tamil
                                  Telugu
                                  Urdu}} }
  build_form $frm demo $arg
};#/*demo_attr_v16*/

proc uidai_auth_server {frm} {

  set arg { {uri urie combobox {/uidauth /auth /auth2.5}} {host hoste entry {developer.uidai.gov.in}} }

  build_form $frm uidai $arg
};#/*uidai_auth_server*/

proc demo_lang_get {p_name} {

  set lang_opt { {Assamese   01}
                 {Bengali    02}
                 {Gujarati   05}
                 {Hindi      06}
                 {Kannada    07}
                 {Malayalam  11}
                 {Manipuri   12}
                 {Marathi    13}
                 {Oriya      15}
                 {Punjabi    16}
                 {Tamil      20}
                 {Telugu     21}
                 {Urdu       22}
               }

  set val [$p_name get] 
  puts "Value is $val"
};#/*demo_lang_get*/

proc uses_opt_disable {uses_opt} {
  global widgets_name_v16 

  if {$uses_opt == "pic"} {
    set demo_list [lindex $widgets_name_v16(uses) 0]
  } elseif {$uses_opt == "pac"} {

    set demo_list [lindex $widgets_name_v16(uses) 1]
  } elseif {$uses_opt == "pfac"} {

    set demo_list [lindex $widgets_name_v16(uses) 2]
  } elseif {$uses_opt == "bioc"} {

    set demo_list [lindex $widgets_name_v16(uses) 3]
  } elseif {$uses_opt == "pvc"} {

    set demo_list [lindex $widgets_name_v16(uses) 4]
  } elseif {$uses_opt == "democ"} {

    set demo_list [lindex $widgets_name_v16(uses) 5]
  } else {
    #;/*Invalid Option*/
  }

  $demo_list configure -state normal 
};#/*uses_opt_disable*/

proc uses_opt_enable {uses_opt} {
  global widgets_name_v16

  if {$uses_opt == "pic"} {
    set demo_list [lindex $widgets_name_v16(uses) 0]
  } elseif {$uses_opt == "pac"} {

    set demo_list [lindex $widgets_name_v16(uses) 1]
  } elseif {$uses_opt == "pfac"} {

    set demo_list [lindex $widgets_name_v16(uses) 2]
  } elseif {$uses_opt == "bioc"} {

    set demo_list [lindex $widgets_name_v16(uses) 3]
  } elseif {$uses_opt == "pvc"} {

    set demo_list [lindex $widgets_name_v16(uses) 4]
  } elseif {$uses_opt == "democ"} {

    set demo_list [lindex $widgets_name_v16(uses) 5]
  } else {
    #;/*Invalid Option*/
  }

  $demo_list configure -state normal
};#/*uses_opt_enable*/

proc uses_opt {chk_btn chk_selected} {

  if {$chk_selected == 1} {
    #/*Enable the Pi entry*/
    uses_opt_enable $chk_btn 

  } else {
    #/*Disable the Pi Entry*/
    uses_opt_disable $chk_btn
  }
};#uses_opt*/

proc set_default_auth_v16 {} {
  global widgets_name_v16 
  set default {"" "public" "TXN:BalaaghTesting" "public" "public" "1.6" ""}
  set idx 0
  foreach val $widgets_name_v16(auth) {
    $val delete 0 end
    $val insert 0 [lindex $default $idx]
    incr idx  
  } 
};#/*set_default_auth_v16*/

proc set_default_uses_v16 {} {
  global widgets_name_v16

  [lindex $widgets_name_v16(uses) 0] configure -state normal
  [lindex $widgets_name_v16(uses) 5] configure -state normal
  [lindex $widgets_name_v16(uses) 0] select
  [lindex $widgets_name_v16(uses) 5] select
};#/*set_default_uses_v16*/

proc set_default_meta_v16 {} {
  global widgets_name_v16 
  set default {"Balaagh" "NA" "NA" "NA" "" "500052"}
  set idx 0
  foreach val $widgets_name_v16(meta) {
    if {"Entry" == [winfo class $val]} {
      $val delete 0 end
      $val insert 0 [lindex $default $idx]
    }
    incr idx
  }
};#/*set_default_meta_v16*/

proc clear_auth_v16 {} {
  global widgets_name_v16 
 
  foreach val $widgets_name_v16(auth) {
    $val delete 0 end
  } 
};#/*clear_auth_v16*/

proc clear_uses_v16 {} {
  global widgets_name_v16 

  foreach val $widgets_name_v16(uses) {
    $val configure -state normal
    $val deselect
  } 
};#/*clear_uses_v16*/

proc clear_meta_v16 {} {
  global widgets_name_v16

  foreach val $widgets_name_v16(meta) {
    if {"Entry" == [winfo class $val]} {
      $val delete 0 end
    }
  }
};#/*clear_meta_v16*/

proc build_auth_request_v16 {} {

  set arg {uid tid txn ac sa ver lk}
  set auth [get_value auth $arg]
  set arg {pi pa pfa bio pv demo}
  set uses [get_value uses $arg]
  set arg {type value}
  set tkn  [get_value tkn  $arg]
  set arg {udc fdc idc pip lot lov}
  set meta [get_value meta $arg]

  #/*Prepare the request*/
  set REQ "stage=staging&request=auth&$auth&$uses&$tkn&$meta"

  set checkbutton_var {pic pac pfac bioc pvc democ}
  foreach val $checkbutton_var {
    global $val
    if {$val == "pic" && [subst $$val] == 1} {
      #/*Pi is selected*/
      set arg {ms mv name lname lmv gender dob dobt age phone email}
      set pi [get_value pi $arg] 
      set REQ "$REQ&$pi"

    } elseif {$val == "pac" && [subst $$val] == 1} {
      #/*Pa is selected*/
      set arg {ms co house street lm loc vtc subdist dist state pc po}
      set pa [get_value pa $arg] 
      set REQ "$REQ&$pa"
    
    } elseif {$val == "pfac" && [subst $$val] == 1} {
      #/*pfa is selected*/
      set arg {ms mv av lav lmv}
      set pfa [get_value pfa $arg] 
      set REQ "$REQ&$pfa"

    } elseif {$val == "bioc" && [subst $$val] == 1} {
      #/*bio is selected*/
      set arg {type posh}
      set bio [get_value bio $arg] 
      set REQ "$REQ&$bio"

    } elseif {$val == "pvc" && [subst $$val] == 1} {
      #/*Pv is selected*/
      set arg {pin otp}
      set pv [get_value pv $arg] 
      set REQ "$REQ&$pv"

    } elseif {$val == "democ" && [subst $$val] == 1} {
      #/*demo is selected*/
      set arg {lang}
      set demo [get_value demo $arg] 
      set REQ "$REQ&$demo"
    }
  }

  set arg {uri host}
  set uidai [get_value uidai $arg] 
  set REQ "$REQ&$uidai"
  #/*Extracting the crypto contents*/
  set arg {public private password}
  set crypto [get_value crypto $arg] 
  set REQ "$REQ&$crypto"

  puts "/request?$REQ"
};#/*build_auth_request_v16*/
