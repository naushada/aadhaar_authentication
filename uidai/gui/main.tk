#!/usr/bin/wish8.6 -f

source [lindex $argv 0]/util.tk
source [lindex $argv 0]/auth16.tk
source [lindex $argv 0]/auth_ui20.tk
source [lindex $argv 0]/auth_ui25.tk
source [lindex $argv 0]/otp16.tk
source [lindex $argv 0]/ekyc20.tk
source [lindex $argv 0]/response.tk


#/* 
# @Name: main.tk
# @Description: This file is to build the menu bar with anylevel of
#              submenu. The convention for menu creation is as follows
# 1) "." - represents the top level of menu 
# 2) "+" - represents that this is a parent for submenu
# 3) neither "." nor "+" represents the command for menu item
# 4) command arguments for menu item
#
# @Author: Mohad Naushad Ahmed
# @Email:  NAUSHAD.DLN@GMAIL.COM
# @Dated:  15-May-2018
#*/

set menu_b {
  #/*Root     Menu Name      Parent/Leaf(proc) Argument for Leafnode*/
  #/*----------------------------------------------------------------*/
  {"."          "File"                  "+"   {}}
  {"File"       "Exit"                  "Exit" {}}
  {"."          "Uidai"                 "+"            {}}
  {"Uidai"      "Staging"               "+"            {}}
  {"Staging"    "Authentication"        "+"            {}}
  {"Authentication"    "Version1.6"    "{staging_auth 1.6}" {}}
  {"Authentication"    "Version2.0"    "{staging_auth 2.0}" {}}
  {"Authentication"    "Version2.5"    "{staging_auth 2.5}" {}}
  {"Staging"           "Otp"            "+"            {}}
  {"Otp"               "Version1.6"    "{staging_otp 1.6}"  {}}
  {"Otp"               "Version2.5"    "{staging_otp 2.5}"  {}}
  {"Staging"           "eKyc"           "+"            {}}
  {"eKyc"              "Version2.0"     "{staging_ekyc 2.0 1.6}"  {}}
  {"eKyc"              "Version2.5"     "proc_ekyc25"  {}}
  {"Uidai"             "Pre-Production" "+"            {}}
  {"Pre-Production"    "Authentication" "+"            {}}
  {"Authentication"    "Version1.6"    "dot6"        {}}
  {"Authentication"    "Version2.0"    "dot0"        {}}
  {"Pre-Production"    "Otp"            "+"            {}}
  {"Otp"               "Version1.6"    "proc_otp16"   {}}
  {"Otp"               "Version2.5"    "proc_otp25"   {}}
  {"Pre-Production"    "eKyc"           "+"            {}}
  {"eKyc"              "Version1.6"    "proc_ekyc16"  {}}
  {"eKyc"              "Version2.5"    "proc_ekyc25"  {}}
  {"Uidai"             "Production" "+"            {}}
  {"Production"    "Authentication" "+"            {}}
  {"Authentication"    "Version1.6"    "dot6"        {}}
  {"Authentication"    "Version2.0"    "dot0"        {}}
  {"Production"    "Otp"            "+"            {}}
  {"Otp"               "Version1.6"    "proc_otp16"   {}}
  {"Otp"               "Version2.5"    "proc_otp25"   {}}
  {"Production"    "eKyc"           "+"            {}}
  {"eKyc"              "Version1.6"    "proc_ekyc16"  {}}
  {"eKyc"              "Version2.5"    "proc_ekyc25"  {}}

};#/*Menu bar*/

proc Exit {} {
  #exit
  puts "Exit"
};#/**/
 
proc staging_ekyc {ekyc_version auth_version} {

  set container [init_frame container eKYC]
  staging_auth_form $container $auth_version 
  staging_uses_form $container $auth_version
  staging_tkn_form  $container $auth_version
  staging_meta_form $container $auth_version
  staging_pi_form   $container $auth_version
  staging_pa_form   $container $auth_version
  staging_pfa_form  $container $auth_version
  staging_bio_form  $container $auth_version
  staging_pv_form   $container $auth_version
  staging_demo_form $container $auth_version
  staging_kyc_form  $container $ekyc_version 
  staging_uidai_form $container $auth_version 3 2 auth 
  crypto_widget_form $container 4 0 
  btn_widget $container kyc $ekyc_version

};#/*staging_auth*/
 
proc staging_otp {version} {

  set container [init_frame container OTP]
  staging_otp_form $container $version 
  staging_opts_form $container $version
  staging_uidai_form $container $version 1 0 otp
  crypto_widget_form $container 1 1 
  btn_widget $container otp $version

};#/*staging_otp*/

proc staging_auth {version} {

  set container [init_frame container Authentication]
  staging_auth_form $container $version 
  staging_uses_form $container $version
  staging_tkn_form  $container $version
  staging_meta_form $container $version
  staging_pi_form   $container $version
  staging_pa_form   $container $version
  staging_pfa_form  $container $version
  staging_bio_form  $container $version
  staging_pv_form   $container $version
  staging_demo_form $container $version
  staging_uidai_form $container $version 3 1 auth 
  crypto_widget_form $container 3 2 
  btn_widget $container auth $version

};#/*staging_auth*/

proc staging_pi_form {f_name version} {

  set lbl_frm [labelframe $f_name.staging_pi -text "Pi (Attributes)"]
  grid $lbl_frm -sticky news -pady 2 -padx 1 -row 1 -column 1

  if {$version == "1.6"} {
    pi_attr_v16 $lbl_frm
  }
};#/*staging_pi_form*/

proc staging_pa_form {f_name version} {

  set lbl_frm [labelframe $f_name.staging_pa -text "Pa (Attributes)"]
  grid $lbl_frm -sticky news -pady 2 -padx 1 -row 1 -column 2

  if {$version == "1.6"} {
    pa_attr_v16 $lbl_frm
  }
};#/*staging_pa_form*/

proc staging_pfa_form {f_name version} {

  set lbl_frm [labelframe $f_name.staging_pfa -text "Pfa (Attributes)"]
  grid $lbl_frm -sticky news -pady 2 -padx 1 -row 2 -column 0

  if {$version == "1.6"} {
    pfa_attr_v16 $lbl_frm
  }
};#/*staging_pfa_form*/

proc staging_bio_form {f_name version} {

  set lbl_frm [labelframe $f_name.staging_bio -text "Bio (Attributes)"]
  grid $lbl_frm -sticky news -pady 2 -padx 1 -row 2 -column 1

  if {$version == "1.6"} {
    bio_attr_v16 $lbl_frm
  }
};#/*staging_bio_form*/

proc staging_pv_form {f_name version} {

  set lbl_frm [labelframe $f_name.staging_pv -text "Pv (Attributes)"]
  grid $lbl_frm -sticky news -pady 2 -padx 1 -row 2 -column 2

  if {$version == "1.6"} {
    pv_attr_v16 $lbl_frm
  }
};#/*staging_pv_form*/

proc staging_demo_form {f_name version} {

  set lbl_frm [labelframe $f_name.staging_demo -text "Demo (Attributes)"]
  grid $lbl_frm -sticky news -pady 2 -padx 1 -row 3 -column 0

  if {$version == "1.6"} {
    demo_attr_v16 $lbl_frm
  }
};#/*staging_demo_form*/

proc staging_uidai_form {f_name version row col type} {

  set lbl_frm [labelframe $f_name.staging_uidai -text "Uidai Host (Attributes)"]
  grid $lbl_frm -sticky news -pady 2 -padx 1 -row $row -column $col

  if {$version == "1.6"} {
    if {"auth" == $type} {
      uidai_auth_server $lbl_frm
    } elseif {"otp" == $type} {
      uidai_otp_server $lbl_frm 
    }
  }
};#/*staging_uidai_form*/


proc staging_otp_form {f_name version} {
  set lbl_frm [labelframe $f_name.staging_otp -text "Otp* (Attributes)"]
  grid $lbl_frm -sticky news -row 0 -column 0 -pady 2 -padx 1

  if {$version == "1.6"} {
    otp_attr_v16 $lbl_frm

  } elseif {$version == "2.0"} {

  } elseif {$version == "2.5"} {

  }
 
};#/*staging_otp_form*/

proc staging_opts_form {f_name version} {
  set lbl_frm [labelframe $f_name.staging_opts -text "Opts* (Attributes)"]
  grid $lbl_frm -sticky news -row 0 -column 1 -row 0 -pady 2 -padx 1

  if {$version == "1.6"} {
    opts_attr_v16 $lbl_frm
  }

};#/*staging_opts_form*/

proc staging_kyc_form {f_name version} {
  set lbl_frm [labelframe $f_name.staging_kyc -text "eKYC* (Attributes)"]
  grid $lbl_frm -sticky news -row 3 -column 1 -pady 2 -padx 1

  if {$version == "2.0"} {
    kyc_attr_v20 $lbl_frm

  } elseif {$version == "2.1"} {
    auth_attr_v21 $lbl_frm

  } elseif {$version == "2.5"} {
    auth_attr_v25 $lbl_frm

  }
 
};#/*staging_auth_form*/


proc staging_auth_form {f_name version} {
  set lbl_frm [labelframe $f_name.staging_auth -text "Auth* (Attributes)"]
  grid $lbl_frm -sticky news -row 0 -column 0 -pady 2 -padx 1

  if {$version == "1.6"} {
    auth_attr_v16 $lbl_frm

  } elseif {$version == "2.0"} {
    auth_attr_v20 $lbl_frm

  } elseif {$version == "2.5"} {
    auth_attr_v25 $lbl_frm

  }
 
};#/*staging_auth_form*/

proc staging_uses_form {f_name version} {
  set lbl_frm [labelframe $f_name.staging_uses -text "Uses* (Attributes)"]
  grid $lbl_frm -sticky news -row 0 -column 1 -row 0 -pady 2 -padx 1

  if {$version == "1.6"} {
    uses_attr_v16 $lbl_frm
  }

};#/*staging_uses_form*/

proc staging_tkn_form {f_name version} {
  set lbl_frm [labelframe $f_name.staging_tkn -text "Tkn (Attributes)"]
  grid $lbl_frm -sticky news -row 0 -column 2 -row 0 -pady 2 -padx 1

  if {$version == "1.6"} {
    tkn_attr_v16 $lbl_frm
  }
};#/*staging_tkn_form*/

proc staging_meta_form {f_name version} {
  set lbl_frm [labelframe $f_name.staging_meta -text "Meta* (Attributes)"]
  grid $lbl_frm -sticky news -column 0 -row 1 -pady 2 -padx 1

  if {$version == "1.6"} {
    meta_attr_v16 $lbl_frm
  }

};#/*staging_meta_form*/

proc default_contents {type version} {

  if {"auth" == $type} {

    if {"1.6" == $version} {
     set_default_auth_v16
     set_default_uses_v16
     uses_opt_enable "pic"
     set_default_meta_v16 

    } elseif {"2.0" == $version} { 
      
    }

  } elseif {"otp" == $type} {

    if {"1.6" == $version} {
      set_default_otp_v16 
    }

  } elseif {"kyc" == $type} {

    if {"2.0" == $version} {
      set_default_kyc_v20
      set_default_auth_v16
      set_default_uses_v16
      uses_opt_enable "pvc"
      set_default_meta_v16 
    }
    
  }
};#/*default_contents*/

proc clear_contents {type version} {

  if {"auth" == $type} {

    if {"1.6" == $version} {
      clear_auth_v16
      clear_uses_v16
      uses_opt_disable "pic"
      uses_opt_disable "pac"
      uses_opt_disable "pfac"
      uses_opt_disable "bioc"
      uses_opt_disable "pvc"
      uses_opt_disable "democ"
      clear_meta_v16 

    } elseif {"2.0" == $version} { 
      
    }
  } elseif {"otp" == $type} {
    
  } elseif {"kyc" == $type} {

    if {"2.0" == $version} {
      clear_auth_v16
      clear_uses_v16
      uses_opt_disable "pic"
      uses_opt_disable "pac"
      uses_opt_disable "pfac"
      uses_opt_disable "bioc"
      uses_opt_disable "pvc"
      uses_opt_disable "democ"
      clear_meta_v16 
    }
    
  }
};#/*clear_contents*/

proc submit_contents {type version} {

  if {"auth" == $type} {

    if {"1.6" == $version} {
      build_auth_request_v16    
    } elseif {"2.0" == $version} { 
      
    }

  } elseif {"otp" == $type} {
    if {"1.6" == $version} {
      build_otp_request_v16 
    }

  } elseif {"kyc" == $type} {

    if {"2.0" == $version} {
      build_kyc_request_v20
    }
  }

};#submit_contents

proc btn_widget {f_name type version} {

  set frm [frame $f_name.btn_frame]
  set lbl_frm [labelframe $frm.lbl_frame -text "Command"]

  button $lbl_frm.clear -text "Clear" -command "clear_contents $type $version"
  button $lbl_frm.default -text "Set Default Value" -command "default_contents $type $version"
  button $lbl_frm.submit -text "Submit" -command "submit_contents $type $version"
  grid $lbl_frm.clear $lbl_frm.default $lbl_frm.submit -row 4 -pady 5 -padx 5
  grid $lbl_frm 
  grid $frm -sticky w -pady 8 -padx 9
    
};#/*btn_widget*/

proc crypto_widget_form {f_name row col} {
  global widgets_name_v16
  set lbl_frm [labelframe $f_name.crypto_lbl_frame -text "Public/Privte Keys File"]
  grid $lbl_frm -sticky news -column $col -row $row -pady 2 -padx 1

  set tmp [entry $lbl_frm.public -width 30 -textvariable crypto_public_key_file]
  set widgets_name_v16(crypto) [linsert $widgets_name_v16(crypto) 0 $tmp]
  set tmp [entry $lbl_frm.private -width 30 -textvariable crypto_private_key_file]
  set widgets_name_v16(crypto) [linsert $widgets_name_v16(crypto) 1 $tmp]
  set tmp [entry $lbl_frm.password -width 30 -textvariable crypto_password]
  set widgets_name_v16(crypto) [linsert $widgets_name_v16(crypto) 2 $tmp]

  label $lbl_frm.lbl_password -text "Password"
  button $lbl_frm.btn_public -text "Sel Public File" -command "browse_file public"
  button $lbl_frm.btn_private -text "Sel Private Key File" -command "browse_file private"
  grid $lbl_frm.public $lbl_frm.btn_public -pady 2 -padx 4 -sticky news
  grid $lbl_frm.private $lbl_frm.btn_private -pady 2 -padx 4 -sticky news
  grid $lbl_frm.password $lbl_frm.lbl_password -pady 2 -padx 4 -sticky ew
  grid $lbl_frm
    
};#/*crypto_widget_form*/

proc browse_file {type} {
  global crypto_public_key_file
  global crypto_private_key_file
  set types {
        {{All Files}        *             }
        {{Text Files}       {.txt}        }
        {{TCL Scripts}      {.tcl}        }
        {{C Source Files}   {.c}      TEXT}
        {{GIF Files}        {.gif}        }
        {{Text Files}       {}        TEXT}
      }

  set filename_list [tk_getOpenFile -filetypes $types]

  if {"public" == $type} {
    set crypto_public_key_file $filename_list
  } else {
    set crypto_private_key_file $filename_list
  }

};#/*browser_file*/

# /**
# @brief This function creates the canvas with vertical and horizontal 
# scrollbars and attached themselves to frame.
#
# @pram f_name
# @return none
# @author NAUSHAD.DLN@GMAIL.COM
# */
proc init_frame {f_name title} {

  toplevel .child_win
  wm title .child_win $title 

  canvas .child_win.canvas -xscrollcommand ".child_win.xscroll set" -yscrollcommand ".child_win.yscroll set" -width 500 -height 600
  scrollbar .child_win.xscroll -orient horizontal -command ".child_win.canvas xview"
  scrollbar .child_win.yscroll -orient vertical -command ".child_win.canvas yview"

  set container [frame .child_win.canvas.$f_name]

  .child_win.canvas create window 0 0 -anchor nw -window $container

  grid .child_win.canvas - .child_win.yscroll -sticky news -pady 4 -padx 2
  grid .child_win.xscroll - x -sticky news
  grid rowconfigure .child_win 0 -weight 1
  grid columnconfigure .child_win 0 -weight 1

  bind $container <Configure> {
    .child_win.canvas configure -scrollregion [.child_win.canvas bbox all]
  }

  return $container
};#/*init_frame*/

# /**
# @brief
# @pram
# @return
# @author
# */
proc get_parent_path path {

  set len [llength $path]
  set tmp_path {}

  for {set idx 1} {$idx < $len} {incr idx} {
    set tmp_var [string tolower [lindex $path [expr {$len - $idx}]]]
    set tmp_path [concat $tmp_path.$tmp_var]
  }

  return $tmp_path
};#/*get_parent_path*/

#  @brief:
#  @pram:
#  @return:
#  
proc build_widget_path path {

  set len [llength $path]
  set tmp_path {}

  for {set idx 0} {$idx < $len} {incr idx} {
    set tmp_var [string tolower [lindex $path [expr {$len - $idx - 1}]]]
    set tmp_path [concat $tmp_path.$tmp_var]
  }

  return $tmp_path
};#/*build_widget_path*/

#  @brief:
#  @pram:
#  @return:
#  
proc get_offset {root parent} {

 set idx 0
  foreach  p_elem $parent {
    if {$root != [lindex $parent $idx]} {
      set idx [expr $idx + 1]
    } else {
      break
    }
  }

  return $idx
};#/*get_offset*/

#  @brief:
#  @pram:
#  @return:
#  
proc del_elem {offset parent} {

  for {set idx 0} {$idx < $offset} {incr idx} {
    set parent [lreplace $parent 0 0]
  }

  return $parent
};#/*del_elem*/

#  @brief:
#  @pram:
#  @return:
#  
proc build_menu {menu_b menu_bar} {

  set parent [list] 

  foreach elem $menu_b {
    set root [lindex $elem 0]
    set lbl [lindex $elem 1]
    set cmd [lindex $elem 2]
    set arg [lindex $elem 3]

    if {$cmd == "+"} {
      #submenu 
      if {"." == $root} {
        #Delete the parent list
        set parent [list]
        set sep 1
      } else {
        set sep 0
      }
      #/*pop up the parent*/ 
      if {$root != [lindex $parent 0]} {
        set offset [get_offset $root $parent]
        set parent [del_elem $offset $parent]
      }
      #/*push into parent*/
      set parent [linsert $parent 0 $lbl]
      set path [build_widget_path $parent]

      if {[llength $parent] > 1} {
        set parent_path [get_parent_path $parent]
        eval $menu_bar$parent_path add cascade -menu [menu $menu_bar$path -tearoff $sep] -label $lbl
        eval $menu_bar$parent_path add separator
      } else {
        eval $menu_bar add cascade -menu [menu $menu_bar$path -tearoff $sep] -label $lbl
        eval $menu_bar add separator
      }
    } elseif {$root == "."} {
      #root element of menubar
      eval $menu_bar add command -command $cmd -label $lbl

    } elseif {[lindex $parent 0] == $root} {
      #sub-menu
      set path [build_widget_path $parent]
      eval $menu_bar$path add command -command $cmd -label $lbl

    } elseif {[llength $parent] > 0} {
      #/*pop up the parent*/ 
      set offset [get_offset $root $parent] 
      set parent [del_elem $offset $parent]
      set path [build_widget_path $parent]
      eval $menu_bar$path add command -command $cmd -label $lbl
    }
  }
};#/*build_menu*/

proc main_window {t} {
  global menu_b
  wm title . $t
  menu .menubar
  . configure -menu .menubar -height 500 -width 1200
  build_menu $menu_b .menubar

};#/*main_window*/


main_window "Balaagh Technologies"


